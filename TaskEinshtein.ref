* Copyright 2023 Aleksandr Bocharov
* Distributed under the Boost Software License, Version 1.0.
* See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt
* 2023-07-03
* https://github.com/Aleksandr3Bocharov/TaskEinshtein

/*

TaskEinshtein

Программа "TaskEinshtein" написана на языке программирования Рефал-5λ.
https://github.com/bmstu-iu9/refal-5-lambda

Решение задачи Эйнштейна на Рефал-5λ.

Задача Эйнштейна.

Условие:
1). Есть 5 домов.
2). В каждом доме живет по одному человеку отличающегося от другого по национальности.
3). Каждый обитатель пьет только один определенный напиток, курит определенную марку сигарет и держит животное.
4). Никто из пяти людей не пьет одинакового напитка, не курит одинаковые сигареты и не держит одинаковых животных.

Вопрос: Чья рыба?

Подсказки:
Англичанин живет в красном доме.
У шведа есть собака.
Датчанин пьет чай.
Зеленый дом стоит слева от белого.
Обитатель зеленого дома пьет кофе.
Человек, который курит Pall Mall, держит птицу.
Обитатель среднего дома пьет молоко.
Обитатель желтого дома курит Dunhill.
Норвежец живет в первом доме.
Курильщик Marlboro живет возле того, у кого есть кошка.
Человек, у которого есть конь, живет возле того, кто курит Dunhill.
Курильщик Winfield пьет пиво.
Норвежец живет возле голубого дома.
Немец курит Rothmans.
Курильщик Marlboro живет по соседству с человеком, который пьет воду.

*/

*$FROM LibraryEx
$EXTERN Map, MapAccum, TermCompare, Inc;

/*

<RU e.String> == e.String

e.String ::= s.CHAR*

*/
RU {
    /* empty */ = /* empty */;
    'Ё' e.RestChars =
      <Chr 240> <RU e.RestChars>;
    'ё' e.RestChars =
      <Chr 241> <RU e.RestChars>;
    s.Char1 s.Char2 e.RestChars,
    <isRU s.Char1 s.Char2>:208 =
      <Chr <Sub <Ord s.Char2> 16>> <RU e.RestChars>;
    s.Char1 s.Char2 e.RestChars,
    <isRU s.Char1 s.Char2>:209 =
      <Chr <Add <Ord s.Char2> 96>> <RU e.RestChars>;
    s.Char e.RestChars =
      s.Char <RU e.RestChars>;
  }
  
  /*
  
  <isRU e.Char> == s.isRU
  
  e.Char ::= s.CHAR s.CHAR
  s.isRU ::= 208 | 209 | False
  
  */
  isRU {
    e.Char,
    <Compare (<Ord e.Char>) 208 143>: '+',
    <Compare (<Ord e.Char>) 208 192>: '-' =
      208;
    e.Char,
    <Compare (<Ord e.Char>) 209 127>: '+',
    <Compare (<Ord e.Char>) 209 144>: '-' =
      209;
    e.Char =
      False
  }

* Вывод справки
Help {
  = <Prout
      <RU
        '\nРешение задачи Эйнштейна на Рефал-5 Лямбда.\n\n'
        'Задача Эйнштейна.\n\n'
        'Условие:\n'
        '1). Есть 5 домов.\n'
        '2). В каждом доме живет по одному человеку отличающегося от другого по национальности.\n'
        '3). Каждый обитатель пьет только один определенный напиток, курит определенную марку сигарет и держит животное.\n'
        '4). Никто из пяти людей не пьет одинакового напитка, не курит одинаковые сигареты и не держит одинаковых животных.\n\n'
        'Вопрос: Чья рыба?\n\n'
        'Подсказки:\n'
        'Англичанин живет в красном доме.\n'
        'У шведа есть собака.\n'
        'Датчанин пьет чай.\n'
        'Зеленый дом стоит слева от белого.\n'
        'Обитатель зеленого дома пьет кофе.\n'
        'Человек, который курит Pall Mall, держит птицу.\n'
        'Обитатель среднего дома пьет молоко.\n'
        'Обитатель желтого дома курит Dunhill.\n'
        'Норвежец живет в первом доме.\n'
        'Курильщик Marlboro живет возле того, у кого есть кошка.\n'
        'Человек, у которого есть конь, живет возле того, кто курит Dunhill.\n'
        'Курильщик Winfield пьет пиво.\n'
        'Норвежец живет возле голубого дома.\n'
        'Немец курит Rothmans.\n'
        'Курильщик Marlboro живет по соседству с человеком, который пьет воду.\n\n\n'
      >
    >
}

/*

<Solve e.Solve> == e.Solve

e.Solve ::= (s.Rule e.Tables '=' e.Table)+ | Not_Exist
s.Rule ::= s.NUMBER
e.Tables ::= (e.Table)*
e.Table ::= (e.Home1) (e.Home2) (e.Home3) (e.Home4) (e.Home5)
e.Home1 ::= (Home 1) (Color e.Color) (Nationality e.Nationality) (Cigarettes e.Cigarettes) (Animal e.Animal) (Drink e.Drink)
e.Home2 ::= (Home 2) (Color e.Color) (Nationality e.Nationality) (Cigarettes e.Cigarettes) (Animal e.Animal) (Drink e.Drink)
e.Home3 ::= (Home 3) (Color e.Color) (Nationality e.Nationality) (Cigarettes e.Cigarettes) (Animal e.Animal) (Drink e.Drink)
e.Home4 ::= (Home 4) (Color e.Color) (Nationality e.Nationality) (Cigarettes e.Cigarettes) (Animal e.Animal) (Drink e.Drink)
e.Home5 ::= (Home 5) (Color e.Color) (Nationality e.Nationality) (Cigarettes e.Cigarettes) (Animal e.Animal) (Drink e.Drink)
e.Color ::= Yellow | Blue | Red | Green | White | '???'
e.Nationality ::= Norwegian | Danish | Englishman | German | Shwed | '???'
e.Cigarettes ::= Dunhill | Rothmans | PallMall | Marlboro | Winfield | '???'
e.Animal ::= Cat | Horse | Bird | Fish | Dog | '???'
e.Drink ::= Water | Tea | Milk | Coffee | Beer | '???'

*/
Solve {
  /* Найдено решение */
  e.Solve-B
  (s.Rule e.Tables '=' 
    (Home 1) (Color s.Color1) (Nationality s.Nationality1) (Cigarettes s.Cigarettes1) (Animal s.Animal1) (Drink s.Drink1)
    (Home 2) (Color s.Color2) (Nationality s.Nationality2) (Cigarettes s.Cigarettes2) (Animal s.Animal2) (Drink s.Drink2)
    (Home 3) (Color s.Color3) (Nationality s.Nationality3) (Cigarettes s.Cigarettes3) (Animal s.Animal3) (Drink s.Drink3)
    (Home 4) (Color s.Color4) (Nationality s.Nationality4) (Cigarettes s.Cigarettes4) (Animal s.Animal4) (Drink s.Drink4)
    (Home 5) (Color s.Color5) (Nationality s.Nationality5) (Cigarettes s.Cigarettes5) (Animal s.Animal5) (Drink s.Drink5)
  ) =
    e.Solve-B
    (s.Rule e.Tables '='
      (Home 1) (Color s.Color1) (Nationality s.Nationality1) (Cigarettes s.Cigarettes1) (Animal s.Animal1) (Drink s.Drink1)
      (Home 2) (Color s.Color2) (Nationality s.Nationality2) (Cigarettes s.Cigarettes2) (Animal s.Animal2) (Drink s.Drink2)
      (Home 3) (Color s.Color3) (Nationality s.Nationality3) (Cigarettes s.Cigarettes3) (Animal s.Animal3) (Drink s.Drink3)
      (Home 4) (Color s.Color4) (Nationality s.Nationality4) (Cigarettes s.Cigarettes4) (Animal s.Animal4) (Drink s.Drink4)
      (Home 5) (Color s.Color5) (Nationality s.Nationality5) (Cigarettes s.Cigarettes5) (Animal s.Animal5) (Drink s.Drink5)
    );
  /* Нет решения */
  (0 '=' e._) (1 '=' Impossible) =
    Not_Exist;
  /* Возврат к предыдущему правилу */
  e.Solve-B (s.PrevRule e.Tables '=' e._) (s.Rule '=' Impossible) =
    <Solve e.Solve-B (s.PrevRule e.Tables '=' Impossible)>;
  /* Переход к следующему применению правила */
  e.Solve-B (s.Rule (e.Table) e.RestTables '=' Impossible) =
    <Solve e.Solve-B (s.Rule e.RestTables '=' e.Table)>;
  /* Поиск завершён */
  e.Solve-B (15 e.Tables '=' e.Table) =
    e.Solve-B (15 e.Tables '=' e.Table);
  /* Переход к следующему правилу */  
  e.Solve-B (s.Rule e.Tables '=' e.Table) =
    <ApplyRule <Inc s.Rule> e.Table>:
    {
      (e.NewTable) e.RestNewTables =
        <Solve e.Solve-B (s.Rule e.Tables '=' e.Table) (<Inc s.Rule> e.RestNewTables '=' e.NewTable)>;
      =
        e.Solve-B (s.Rule e.Tables '=' Impossible)
    }      
}

ApplyRule {
  s.Rule s.UnifRule e.Table = <Legal <Try s.Rule s.UnifRule e.Table>>
}

Try {
  1 1 (e.Home-B (Color '???') (Nationality '???') e.Home1-E) e.Table-E =
    (e.Home-B (Color Red) (Nationality Englishman) e.Home1-E) e.Table-E;
  1 1 (e.Home-B (Color Red) (Nationality '???') e.Home1-E) e.Table-E =
    (e.Home-B (Color Red) (Nationality Englishman) e.Home1-E) e.Table-E;  
  1 1 (e.Home-B (Color '???') (Nationality Englishman) e.Home1-E) e.Table-E =
    (e.Home-B (Color Red) (Nationality Englishman) e.Home1-E) e.Table-E;  
  1 1 (e.Home-B (Color Red) (Nationality Englishman) e.Home1-E) e.Table-E =
    (e.Home-B (Color Red) (Nationality Englishman) e.Home1-E) e.Table-E;  
  1 1 e._ =
    Impossible;   
}

/*

<Answer e.Table> == e.Nationality | '<Решение не найдено>'

e.Table ::= (e.Home1) (e.Home2) (e.Home3) (e.Home4) (e.Home5)
e.Home1 ::= (Home 1) (Color e.Color) (Nationality e.Nationality) (Cigarettes e.Cigarettes) (Animal e.Animal) (Drink e.Drink)
e.Home2 ::= (Home 2) (Color e.Color) (Nationality e.Nationality) (Cigarettes e.Cigarettes) (Animal e.Animal) (Drink e.Drink)
e.Home3 ::= (Home 3) (Color e.Color) (Nationality e.Nationality) (Cigarettes e.Cigarettes) (Animal e.Animal) (Drink e.Drink)
e.Home4 ::= (Home 4) (Color e.Color) (Nationality e.Nationality) (Cigarettes e.Cigarettes) (Animal e.Animal) (Drink e.Drink)
e.Home5 ::= (Home 5) (Color e.Color) (Nationality e.Nationality) (Cigarettes e.Cigarettes) (Animal e.Animal) (Drink e.Drink)
e.Color ::= Yellow | Blue | Red | Green | White | '???'
e.Nationality ::= Norwegian | Danish | Englishman | German | Shwed | '???'
e.Cigarettes ::= Dunhill | Rothmans | PallMall | Marlboro | Winfield | '???'
e.Animal ::= Cat | Horse | Bird | Fish | Dog | '???'
e.Drink ::= Water | Tea | Milk | Coffee | Beer | '???

*/
Answer {
  e._ (e._ (Nationality e.Nationality) e._ (Animal Fish) e._) e._ =
    e.Nationality:
    {
      Norwegian =
        'Норвежец';
      Danish =
        'Датчанин';
      Englishman =
        'Англичанин';
      German =
        'Немец';
      Shwed =
        'Швед';
      '???' =
        '???'     
    };
  e._ =
    '<Решение не найдено>'    
}

/*

<PrintSolve e.Table> ==

e.Solve ::= (s.Rule e.Tables '=' e.Table)+ | Not_Exist
s.Rule ::= s.NUMBER
e.Tables ::= (e.Table)*
e.Table ::= (e.Home1) (e.Home2) (e.Home3) (e.Home4) (e.Home5)
e.Home1 ::= (Home 1) (Color e.Color) (Nationality e.Nationality) (Cigarettes e.Cigarettes) (Animal e.Animal) (Drink e.Drink)
e.Home2 ::= (Home 2) (Color e.Color) (Nationality e.Nationality) (Cigarettes e.Cigarettes) (Animal e.Animal) (Drink e.Drink)
e.Home3 ::= (Home 3) (Color e.Color) (Nationality e.Nationality) (Cigarettes e.Cigarettes) (Animal e.Animal) (Drink e.Drink)
e.Home4 ::= (Home 4) (Color e.Color) (Nationality e.Nationality) (Cigarettes e.Cigarettes) (Animal e.Animal) (Drink e.Drink)
e.Home5 ::= (Home 5) (Color e.Color) (Nationality e.Nationality) (Cigarettes e.Cigarettes) (Animal e.Animal) (Drink e.Drink)
e.Color ::= Yellow | Blue | Red | Green | White | '???'
e.Nationality ::= Norwegian | Danish | Englishman | German | Shwed | '???'
e.Cigarettes ::= Dunhill | Rothmans | PallMall | Marlboro | Winfield | '???'
e.Animal ::= Cat | Horse | Bird | Fish | Dog | '???'
e.Drink ::= Water | Tea | Milk | Coffee | Beer | '???'

*/
PrintSolve {
  e.Solve =
    <MapAccum
      {
        (s._ e.PrevTable) (s.Rule e._ '=' e.Table) =
          (s.Rule e.Table)
          <PrintRule s.Rule>
          <TermCompare (e.PrevTable) (e.Table)>:
          {
             '=' =
               <Prout <RU 'Данная подсказка является следствием из предыдущих подсказок.\n'>>;
             e._ =  
          }
          <PrintTable e.Table>
      }
      (0)     
      e.Solve
    >: (s.Rule e._) =
      <Prout <RU 'Следующие подсказки не использовались при решении задачи:\n'>>
      <PrintOtherRules s.Rule 15>
}

/*

<PrintRule s.Rule> ==

s.Rule ::= s.NUMBER

*/
PrintRule {
  s.Rule =
    <Prout <RU 'Подсказка '> s.Rule ':'>
}

/*

<PrintTable e.Table> ==

e.Table ::= (e.Home1) (e.Home2) (e.Home3) (e.Home4) (e.Home5)
e.Home1 ::= (Home 1) (Color e.Color) (Nationality e.Nationality) (Cigarettes e.Cigarettes) (Animal e.Animal) (Drink e.Drink)
e.Home2 ::= (Home 2) (Color e.Color) (Nationality e.Nationality) (Cigarettes e.Cigarettes) (Animal e.Animal) (Drink e.Drink)
e.Home3 ::= (Home 3) (Color e.Color) (Nationality e.Nationality) (Cigarettes e.Cigarettes) (Animal e.Animal) (Drink e.Drink)
e.Home4 ::= (Home 4) (Color e.Color) (Nationality e.Nationality) (Cigarettes e.Cigarettes) (Animal e.Animal) (Drink e.Drink)
e.Home5 ::= (Home 5) (Color e.Color) (Nationality e.Nationality) (Cigarettes e.Cigarettes) (Animal e.Animal) (Drink e.Drink)
e.Color ::= Yellow | Blue | Red | Green | White | '???'
e.Nationality ::= Norwegian | Danish | Englishman | German | Shwed | '???'
e.Cigarettes ::= Dunhill | Rothmans | PallMall | Marlboro | Winfield | '???'
e.Animal ::= Cat | Horse | Bird | Fish | Dog | '???'
e.Drink ::= Water | Tea | Milk | Coffee | Beer | '???'

*/
PrintTable {
  e.Table =
    <Prout <RU 'Дом '  'Цвет           ' 'Национальность ' 'Сигареты       ' 'Животное       ' 'Напиток'>>
    <Map
      {
        (
          (Home s.Home) (Color e.Color) (Nationality e.Nationality)
          (Cigarettes e.Sigarettes) (Animal e.Animal) (Drink e.Drink)
        ) =
          <Prout s.Home '  ' <RU <Format e.Color> <Format e.Nationality> <Format e.Cigarettes> <Format e.Animal> <Format e.Drink>>>
      }     
      e.Table
    >
    <Prout '\n'>
}

/*

<Format e.Object> == e.Format

e.Object ::= e.Color | e.Nationality | e.Cigarretes | e.Animal | e.Drink
e.Color ::= Yellow | Blue | Red | Green | White | '???'
e.Nationality ::= Norwegian | Danish | Englishman | German | Shwed | '???'
e.Cigarettes ::= Dunhill | Rothmans | PallMall | Marlboro | Winfield | '???'
e.Animal ::= Cat | Horse | Bird | Fish | Dog | '???'
e.Drink ::= Water | Tea | Milk | Coffee | Beer | '???'
e.Format ::= 'Жёлтый  ' | 'Синий   ' | 'Красный ' | 'Зелёный ' | 'Белый   ' |
  | 'Норвежец       '  | 'Датчанин       '  |  'Англичанин     ' | 'Немец          ' | 'Швед           '  |
  | 'Dunhill   ' | 'Rothmans  '  |  'Pall Mall ' | 'Marlboro  ' | 'Winfield  '  |
  | 'Кошка    ' | 'Конь     '  |  'Птица    ' | 'Рыба     ' | 'Собака   '  |
  | 'Вода' | 'Чай'  |  'Молоко' | 'Кофе' | 'Пиво' | '               '

*/
Format {
  Yellow =
    'Жёлтый  ';
  Blue =
    'Синий   ';
  Red =
    'Красный ';
  Green =
    'Зелёный ';
  White =
    'Белый   ';     
  Norwegian =
    'Норвежец       '; 
  Danish =
    'Датчанин       ';  
  Englishman =
    'Англичанин     ';
  German =
    'Немец          '; 
  Shwed =
    'Швед           ';   
  Dunhill =
    'Dunhill   ';
  Rothmans =
    'Rothmans  ';
  PallMall =
    'Pall Mall ';
  Marlboro =
    'Marlboro  '; 
  Winfield =
    'Winfield  ';  
  Cat =
    'Кошка    ';    
  Horse =
    'Конь     ';
  Bird =
    'Птица    '; 
  Fish =
    'Рыба     ';
  Dog =
    'Собака   ';
  Water =
    'Вода';  
  Tea =
    'Чай';
  Milk =
    'Молоко'; 
  Coffee =
    'Кофе';
  Beer =
    'Пиво';
  '???' =
    '               '  
}

$ENTRY Go {
  = <Help>
    <Solve 
      (0 '='
      ((Home 1) (Color '???') (Nationality '???') (Cigarettes '???') (Animal '???') (Drink '???'))
      ((Home 2) (Color '???') (Nationality '???') (Cigarettes '???') (Animal '???') (Drink '???'))
      ((Home 3) (Color '???') (Nationality '???') (Cigarettes '???') (Animal '???') (Drink '???'))
      ((Home 4) (Color '???') (Nationality '???') (Cigarettes '???') (Animal '???') (Drink '???'))
      ((Home 5) (Color '???') (Nationality '???') (Cigarettes '???') (Animal '???') (Drink '???'))
      )
    >: e.Solve:
    {
      e.Solve-B (s.Rule e.Tables '=' e.Table) = 
        <Prout <RU 'Вопрос: Чья рыба? Ответ: '> <RU <Answer e.Table>> <RU ' держит рыбу.\n\n\n'>>
        <PrintSolve e.Solve-B (s.Rule e.Tables '=' e.Table)>;
      Not_Exist =
        <Prout <RU 'Вопрос: Чья рыба? Ответ: Нет решения.'>>    
    }
    
}